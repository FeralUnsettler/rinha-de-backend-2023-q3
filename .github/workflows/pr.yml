name: Validador de submissão

on:
  pull_request:
    types: [ 'opened', 'reopened', 'synchronize']
    branches: [ 'main' ]
    paths: [ 'participantes/*/docker-compose.yml' ]

jobs:
  participante:
    name: PR altera um único participante
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: true

    outputs:
      nome: ${{ steps.participantes.outputs.nome }}

    steps:
      - name: Checkout da branch
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Validando participantes
        id: participantes
        run: |
          participantes=$(git diff --name-only origin/main | grep "docker-compose.yml" | xargs dirname | xargs basename | jq --raw-input . | jq --slurp .)
          quantidade=$(echo ${participantes} | jq length)

          if [ $quantidade -ne 1 ]; then
            echo "Era esperado que o PR alterasse exatamente 1 participante" >&2
            exit 1
          fi

          participante=$(echo ${participantes} | jq 'first' | jq -r)
          echo "nome=${participante}" >> "${GITHUB_OUTPUT}"

  docker-compose:
    name: Arquivo docker-compose.yml é valido
    needs: participante
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: true

    outputs:
      caminho: ${{ steps.docker-compose.outputs.caminho }}

    concurrency:
        group: pr-${{ github.head_ref }}
        cancel-in-progress: true

    steps:
      - name: Checkout da branch
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Validando docker-compose.yml
        id: docker-compose
        run: |
          caminho="participantes/${{ needs.participante.outputs.nome }}/docker-compose.yml"

          docker compose -f "${caminho}" config

          if [ $? -ne 0 ]; then
            echo "Então, o docker compose tá falando que esse docker-compose.yml tá inválido" >&2
            exit 1
          fi

          echo "caminho=${arquivo}" >> "${GITHUB_OUTPUT}"

  memoria-alocada:
    name: Memória dentro do limite
    needs: [ 'participante', 'docker-compose' ]
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

    steps:
      - name: Checkout da branch
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Valida limite de memória
        working-directory: participantes/${{ needs.participante.outputs.nome }}
        run: |
          quantidades=$(docker compose -f docker-compose.yml config | grep "memory:" | cut -d ":" -f2 | xargs | sed -e "s/[[:space:]]/\n/g" | jq --slurp .)
          quantidade=$(echo $quantidades | jq '. | add | . / 1024 / 1024')

          if [ $? -ne 0 ]; then
            echo "Ou, vc não colocou limite de memória não? Confere isso ai" >&2
            exit 1
          fi

          if [ ${quantidade} -gt 3072 ]; then
            echo "Pô, o limite de memório é 3072MiB! Você usou ${quantidade}MiB" >&2
            exit 1
          fi

          echo "Tá certo! Tá usando ${quantidade}"

  vcpu-alocada:
    name: vCPU dentro do limite
    needs: [ 'participante', 'docker-compose' ]
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

    steps:
      - name: Checkout da branch
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Validando limite de vCPU
        working-directory: participantes/${{ needs.participante.outputs.nome }}
        run: |
          quantidades=$(docker compose -f docker-compose.yml config | grep "cpus:" | cut -d ":" -f2 | xargs | sed -e "s/[[:space:]]/\\n/g" | jq --slurp .)
          quantidade=$(echo $quantidades | jq '. | add')

          if [ $? -ne 0 ]; then
            echo "Ou, vc não colocou limite de CPU não? Confere isso ai" >&2
            exit 1
          fi

          if [ ${quantidade} -gt 1.5 ]; then
            echo "Pô, o limite de memório é 3072MiB! Você usou ${quantidade}MiB" >&2
            exit 1
          fi

          echo "Tá certo! Tá usando ${quantidade}"
