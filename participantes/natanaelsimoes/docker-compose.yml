version: '3.5'
services:
  api1:
    image: natanaelsimoes/rinha2023q3
    hostname: api1
    depends_on:
      - db
      - redis
    expose:
      - 3000
    environment:
      - DATABASE_HOST=db
      - REDIS_HOST=redis
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2:
    image: natanaelsimoes/rinha2023q3
    hostname: api2
    depends_on:
      - db
      - redis
    expose:
      - 3000
    environment:
      - DATABASE_HOST=db
      - REDIS_HOST=redis
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  redis:
    image: redis
    expose:
      - 6379
    command: redis-server --save "" --appendonly no --maxclients 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db:
   image: postgres
   expose:
     - 5432
   environment:
     - POSTGRES_PASSWORD=root
   command: >-
    postgres
    -c autovacuum=on
    -c checkpoint_completion_target=0.9
    -c checkpoint_timeout='15min'
    -c effective_io_concurrency=200
    -c fsync=on
    -c full_page_writes=on
    -c listen_addresses='*'
    -c log_statement='none'
    -c log_duration=off
    -c log_lock_waits=on
    -c log_error_verbosity=terse
    -c log_min_messages=panic
    -c log_min_error_statement=panic
    -c maintenance_work_mem=64MB
    -c max_connections=200
    -c random_page_cost=1.1
    -c shared_buffers=360MB
    -c temp_buffers=8MB
    -c wal_level=replica
    -c wal_buffers=64MB
    -c work_mem=4MB
   deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
